/*
* generated by Xtext
*/
package org.yazgel.hermes.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class HermesGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Module");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cModuleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameQUALIFIED_NAMEParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cPackagesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cPackagesPackageParserRuleCall_3_0_0 = (RuleCall)cPackagesAssignment_3_0.eContents().get(0);
		private final Assignment cPackagesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPackagesPackageParserRuleCall_3_1_0 = (RuleCall)cPackagesAssignment_3_1.eContents().get(0);
		
		//Module:
		//	{Module} "module" name=QUALIFIED_NAME (packages+=Package packages+=Package*)?;
		public ParserRule getRule() { return rule; }

		//{Module} "module" name=QUALIFIED_NAME (packages+=Package packages+=Package*)?
		public Group getGroup() { return cGroup; }

		//{Module}
		public Action getModuleAction_0() { return cModuleAction_0; }

		//"module"
		public Keyword getModuleKeyword_1() { return cModuleKeyword_1; }

		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMEParserRuleCall_2_0() { return cNameQUALIFIED_NAMEParserRuleCall_2_0; }

		//(packages+=Package packages+=Package*)?
		public Group getGroup_3() { return cGroup_3; }

		//packages+=Package
		public Assignment getPackagesAssignment_3_0() { return cPackagesAssignment_3_0; }

		//Package
		public RuleCall getPackagesPackageParserRuleCall_3_0_0() { return cPackagesPackageParserRuleCall_3_0_0; }

		//packages+=Package*
		public Assignment getPackagesAssignment_3_1() { return cPackagesAssignment_3_1; }

		//Package
		public RuleCall getPackagesPackageParserRuleCall_3_1_0() { return cPackagesPackageParserRuleCall_3_1_0; }
	}

	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameQUALIFIED_NAMEParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cEntitiesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cEntitiesEntityParserRuleCall_4_0_0 = (RuleCall)cEntitiesAssignment_4_0.eContents().get(0);
		private final Assignment cEntitiesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEntitiesEntityParserRuleCall_4_1_0 = (RuleCall)cEntitiesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Package:
		//	{Package} "package" name=QUALIFIED_NAME "{" (entities+=Entity entities+=Entity*)? "}";
		public ParserRule getRule() { return rule; }

		//{Package} "package" name=QUALIFIED_NAME "{" (entities+=Entity entities+=Entity*)? "}"
		public Group getGroup() { return cGroup; }

		//{Package}
		public Action getPackageAction_0() { return cPackageAction_0; }

		//"package"
		public Keyword getPackageKeyword_1() { return cPackageKeyword_1; }

		//name=QUALIFIED_NAME
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//QUALIFIED_NAME
		public RuleCall getNameQUALIFIED_NAMEParserRuleCall_2_0() { return cNameQUALIFIED_NAMEParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(entities+=Entity entities+=Entity*)?
		public Group getGroup_4() { return cGroup_4; }

		//entities+=Entity
		public Assignment getEntitiesAssignment_4_0() { return cEntitiesAssignment_4_0; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_4_0_0() { return cEntitiesEntityParserRuleCall_4_0_0; }

		//entities+=Entity*
		public Assignment getEntitiesAssignment_4_1() { return cEntitiesAssignment_4_1; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_4_1_0() { return cEntitiesEntityParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Feature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Feature:
		//	Reference | DataType;
		public ParserRule getRule() { return rule; }

		//Reference | DataType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Reference
		public RuleCall getReferenceParserRuleCall_0() { return cReferenceParserRuleCall_0; }

		//DataType
		public RuleCall getDataTypeParserRuleCall_1() { return cDataTypeParserRuleCall_1; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cAnnotationsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cAnnotationsEntityAnnotationEnumRuleCall_1_0_0 = (RuleCall)cAnnotationsAssignment_1_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAnnotationsEntityAnnotationEnumRuleCall_1_1_0 = (RuleCall)cAnnotationsAssignment_1_1.eContents().get(0);
		private final Keyword cEntityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSuperEntityAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSuperEntityEntityCrossReference_4_1_0 = (CrossReference)cSuperEntityAssignment_4_1.eContents().get(0);
		private final RuleCall cSuperEntityEntityIDTerminalRuleCall_4_1_0_1 = (RuleCall)cSuperEntityEntityCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cFeaturesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cFeaturesFeatureParserRuleCall_6_0_0 = (RuleCall)cFeaturesAssignment_6_0.eContents().get(0);
		private final Assignment cFeaturesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFeaturesFeatureParserRuleCall_6_1_0 = (RuleCall)cFeaturesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Entity:
		//	{Entity} (annotations+=EntityAnnotation annotations+=EntityAnnotation*)? "entity" name=ID (":" superEntity=[Entity])?
		//	"{" (features+=Feature features+=Feature*)? "}";
		public ParserRule getRule() { return rule; }

		//{Entity} (annotations+=EntityAnnotation annotations+=EntityAnnotation*)? "entity" name=ID (":" superEntity=[Entity])?
		//"{" (features+=Feature features+=Feature*)? "}"
		public Group getGroup() { return cGroup; }

		//{Entity}
		public Action getEntityAction_0() { return cEntityAction_0; }

		//(annotations+=EntityAnnotation annotations+=EntityAnnotation*)?
		public Group getGroup_1() { return cGroup_1; }

		//annotations+=EntityAnnotation
		public Assignment getAnnotationsAssignment_1_0() { return cAnnotationsAssignment_1_0; }

		//EntityAnnotation
		public RuleCall getAnnotationsEntityAnnotationEnumRuleCall_1_0_0() { return cAnnotationsEntityAnnotationEnumRuleCall_1_0_0; }

		//annotations+=EntityAnnotation*
		public Assignment getAnnotationsAssignment_1_1() { return cAnnotationsAssignment_1_1; }

		//EntityAnnotation
		public RuleCall getAnnotationsEntityAnnotationEnumRuleCall_1_1_0() { return cAnnotationsEntityAnnotationEnumRuleCall_1_1_0; }

		//"entity"
		public Keyword getEntityKeyword_2() { return cEntityKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//(":" superEntity=[Entity])?
		public Group getGroup_4() { return cGroup_4; }

		//":"
		public Keyword getColonKeyword_4_0() { return cColonKeyword_4_0; }

		//superEntity=[Entity]
		public Assignment getSuperEntityAssignment_4_1() { return cSuperEntityAssignment_4_1; }

		//[Entity]
		public CrossReference getSuperEntityEntityCrossReference_4_1_0() { return cSuperEntityEntityCrossReference_4_1_0; }

		//ID
		public RuleCall getSuperEntityEntityIDTerminalRuleCall_4_1_0_1() { return cSuperEntityEntityIDTerminalRuleCall_4_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//(features+=Feature features+=Feature*)?
		public Group getGroup_6() { return cGroup_6; }

		//features+=Feature
		public Assignment getFeaturesAssignment_6_0() { return cFeaturesAssignment_6_0; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_6_0_0() { return cFeaturesFeatureParserRuleCall_6_0_0; }

		//features+=Feature*
		public Assignment getFeaturesAssignment_6_1() { return cFeaturesAssignment_6_1; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_6_1_0() { return cFeaturesFeatureParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cAnnotationsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cAnnotationsFetureAnnotationEnumRuleCall_1_0_0 = (RuleCall)cAnnotationsAssignment_1_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAnnotationsFetureAnnotationEnumRuleCall_1_1_0 = (RuleCall)cAnnotationsAssignment_1_1.eContents().get(0);
		private final Keyword cVarKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cReferenceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cReferenceEntityCrossReference_4_0 = (CrossReference)cReferenceAssignment_4.eContents().get(0);
		private final RuleCall cReferenceEntityIDTerminalRuleCall_4_0_1 = (RuleCall)cReferenceEntityCrossReference_4_0.eContents().get(1);
		private final Assignment cManyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cManyLeftSquareBracketRightSquareBracketKeyword_5_0 = (Keyword)cManyAssignment_5.eContents().get(0);
		
		//Reference:
		//	{Reference} (annotations+=FetureAnnotation annotations+=FetureAnnotation*)? "var" name=ID reference=[Entity]
		//	many?="[]"?;
		public ParserRule getRule() { return rule; }

		//{Reference} (annotations+=FetureAnnotation annotations+=FetureAnnotation*)? "var" name=ID reference=[Entity] many?="[]"?
		public Group getGroup() { return cGroup; }

		//{Reference}
		public Action getReferenceAction_0() { return cReferenceAction_0; }

		//(annotations+=FetureAnnotation annotations+=FetureAnnotation*)?
		public Group getGroup_1() { return cGroup_1; }

		//annotations+=FetureAnnotation
		public Assignment getAnnotationsAssignment_1_0() { return cAnnotationsAssignment_1_0; }

		//FetureAnnotation
		public RuleCall getAnnotationsFetureAnnotationEnumRuleCall_1_0_0() { return cAnnotationsFetureAnnotationEnumRuleCall_1_0_0; }

		//annotations+=FetureAnnotation*
		public Assignment getAnnotationsAssignment_1_1() { return cAnnotationsAssignment_1_1; }

		//FetureAnnotation
		public RuleCall getAnnotationsFetureAnnotationEnumRuleCall_1_1_0() { return cAnnotationsFetureAnnotationEnumRuleCall_1_1_0; }

		//"var"
		public Keyword getVarKeyword_2() { return cVarKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//reference=[Entity]
		public Assignment getReferenceAssignment_4() { return cReferenceAssignment_4; }

		//[Entity]
		public CrossReference getReferenceEntityCrossReference_4_0() { return cReferenceEntityCrossReference_4_0; }

		//ID
		public RuleCall getReferenceEntityIDTerminalRuleCall_4_0_1() { return cReferenceEntityIDTerminalRuleCall_4_0_1; }

		//many?="[]"?
		public Assignment getManyAssignment_5() { return cManyAssignment_5; }

		//"[]"
		public Keyword getManyLeftSquareBracketRightSquareBracketKeyword_5_0() { return cManyLeftSquareBracketRightSquareBracketKeyword_5_0; }
	}

	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cAnnotationsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cAnnotationsFetureAnnotationEnumRuleCall_1_0_0 = (RuleCall)cAnnotationsAssignment_1_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAnnotationsFetureAnnotationEnumRuleCall_1_1_0 = (RuleCall)cAnnotationsAssignment_1_1.eContents().get(0);
		private final Keyword cVarKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeDataTypesEnumRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Assignment cManyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cManyLeftSquareBracketRightSquareBracketKeyword_5_0 = (Keyword)cManyAssignment_5.eContents().get(0);
		
		//DataType:
		//	{DataType} (annotations+=FetureAnnotation annotations+=FetureAnnotation*)? "var" name=ID type=DataTypes many?="[]"?;
		public ParserRule getRule() { return rule; }

		//{DataType} (annotations+=FetureAnnotation annotations+=FetureAnnotation*)? "var" name=ID type=DataTypes many?="[]"?
		public Group getGroup() { return cGroup; }

		//{DataType}
		public Action getDataTypeAction_0() { return cDataTypeAction_0; }

		//(annotations+=FetureAnnotation annotations+=FetureAnnotation*)?
		public Group getGroup_1() { return cGroup_1; }

		//annotations+=FetureAnnotation
		public Assignment getAnnotationsAssignment_1_0() { return cAnnotationsAssignment_1_0; }

		//FetureAnnotation
		public RuleCall getAnnotationsFetureAnnotationEnumRuleCall_1_0_0() { return cAnnotationsFetureAnnotationEnumRuleCall_1_0_0; }

		//annotations+=FetureAnnotation*
		public Assignment getAnnotationsAssignment_1_1() { return cAnnotationsAssignment_1_1; }

		//FetureAnnotation
		public RuleCall getAnnotationsFetureAnnotationEnumRuleCall_1_1_0() { return cAnnotationsFetureAnnotationEnumRuleCall_1_1_0; }

		//"var"
		public Keyword getVarKeyword_2() { return cVarKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//type=DataTypes
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//DataTypes
		public RuleCall getTypeDataTypesEnumRuleCall_4_0() { return cTypeDataTypesEnumRuleCall_4_0; }

		//many?="[]"?
		public Assignment getManyAssignment_5() { return cManyAssignment_5; }

		//"[]"
		public Keyword getManyLeftSquareBracketRightSquareBracketKeyword_5_0() { return cManyLeftSquareBracketRightSquareBracketKeyword_5_0; }
	}

	public class QUALIFIED_NAMEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QUALIFIED_NAME");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QUALIFIED_NAME:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	
	public class EntityAnnotationElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "EntityAnnotation");
		private final EnumLiteralDeclaration cCacheEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cCacheCacheKeyword_0 = (Keyword)cCacheEnumLiteralDeclaration.eContents().get(0);
		
		//enum EntityAnnotation:
		//	Cache="@Cache";
		public EnumRule getRule() { return rule; }

		//Cache="@Cache"
		public EnumLiteralDeclaration getCacheEnumLiteralDeclaration() { return cCacheEnumLiteralDeclaration; }

		//"@Cache"
		public Keyword getCacheCacheKeyword_0() { return cCacheCacheKeyword_0; }
	}

	public class FetureAnnotationElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "FetureAnnotation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIndexEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIndexIndexKeyword_0_0 = (Keyword)cIndexEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIdEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIdIdKeyword_1_0 = (Keyword)cIdEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLoadEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLoadLoadKeyword_2_0 = (Keyword)cLoadEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIgnoreEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIgnoreIgnoreKeyword_3_0 = (Keyword)cIgnoreEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum FetureAnnotation:
		//	Index="@Index" | Id="@Id" | Load="@Load" | Ignore="@Ignore";
		public EnumRule getRule() { return rule; }

		//Index="@Index" | Id="@Id" | Load="@Load" | Ignore="@Ignore"
		public Alternatives getAlternatives() { return cAlternatives; }

		//Index="@Index"
		public EnumLiteralDeclaration getIndexEnumLiteralDeclaration_0() { return cIndexEnumLiteralDeclaration_0; }

		//"@Index"
		public Keyword getIndexIndexKeyword_0_0() { return cIndexIndexKeyword_0_0; }

		//Id="@Id"
		public EnumLiteralDeclaration getIdEnumLiteralDeclaration_1() { return cIdEnumLiteralDeclaration_1; }

		//"@Id"
		public Keyword getIdIdKeyword_1_0() { return cIdIdKeyword_1_0; }

		//Load="@Load"
		public EnumLiteralDeclaration getLoadEnumLiteralDeclaration_2() { return cLoadEnumLiteralDeclaration_2; }

		//"@Load"
		public Keyword getLoadLoadKeyword_2_0() { return cLoadLoadKeyword_2_0; }

		//Ignore="@Ignore"
		public EnumLiteralDeclaration getIgnoreEnumLiteralDeclaration_3() { return cIgnoreEnumLiteralDeclaration_3; }

		//"@Ignore"
		public Keyword getIgnoreIgnoreKeyword_3_0() { return cIgnoreIgnoreKeyword_3_0; }
	}

	public class DataTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "DataTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIntegerEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIntegerIntegerKeyword_1_0 = (Keyword)cIntegerEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBooleanBooleanKeyword_2_0 = (Keyword)cBooleanEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLongEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLongLongKeyword_3_0 = (Keyword)cLongEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDoubleEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDoubleDoubleKeyword_4_0 = (Keyword)cDoubleEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cObjectEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cObjectObjectKeyword_5_0 = (Keyword)cObjectEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum DataTypes:
		//	String="string" | Integer="integer" | Boolean="boolean" | Long="long" | Double="double" | Object="object";
		public EnumRule getRule() { return rule; }

		//String="string" | Integer="integer" | Boolean="boolean" | Long="long" | Double="double" | Object="object"
		public Alternatives getAlternatives() { return cAlternatives; }

		//String="string"
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }

		//"string"
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }

		//Integer="integer"
		public EnumLiteralDeclaration getIntegerEnumLiteralDeclaration_1() { return cIntegerEnumLiteralDeclaration_1; }

		//"integer"
		public Keyword getIntegerIntegerKeyword_1_0() { return cIntegerIntegerKeyword_1_0; }

		//Boolean="boolean"
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_2() { return cBooleanEnumLiteralDeclaration_2; }

		//"boolean"
		public Keyword getBooleanBooleanKeyword_2_0() { return cBooleanBooleanKeyword_2_0; }

		//Long="long"
		public EnumLiteralDeclaration getLongEnumLiteralDeclaration_3() { return cLongEnumLiteralDeclaration_3; }

		//"long"
		public Keyword getLongLongKeyword_3_0() { return cLongLongKeyword_3_0; }

		//Double="double"
		public EnumLiteralDeclaration getDoubleEnumLiteralDeclaration_4() { return cDoubleEnumLiteralDeclaration_4; }

		//"double"
		public Keyword getDoubleDoubleKeyword_4_0() { return cDoubleDoubleKeyword_4_0; }

		//Object="object"
		public EnumLiteralDeclaration getObjectEnumLiteralDeclaration_5() { return cObjectEnumLiteralDeclaration_5; }

		//"object"
		public Keyword getObjectObjectKeyword_5_0() { return cObjectObjectKeyword_5_0; }
	}
	
	private ModuleElements pModule;
	private PackageElements pPackage;
	private FeatureElements pFeature;
	private EntityElements pEntity;
	private EntityAnnotationElements unknownRuleEntityAnnotation;
	private FetureAnnotationElements unknownRuleFetureAnnotation;
	private ReferenceElements pReference;
	private DataTypeElements pDataType;
	private DataTypesElements unknownRuleDataTypes;
	private QUALIFIED_NAMEElements pQUALIFIED_NAME;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public HermesGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.yazgel.hermes.xtext.Hermes".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Module:
	//	{Module} "module" name=QUALIFIED_NAME (packages+=Package packages+=Package*)?;
	public ModuleElements getModuleAccess() {
		return (pModule != null) ? pModule : (pModule = new ModuleElements());
	}
	
	public ParserRule getModuleRule() {
		return getModuleAccess().getRule();
	}

	//Package:
	//	{Package} "package" name=QUALIFIED_NAME "{" (entities+=Entity entities+=Entity*)? "}";
	public PackageElements getPackageAccess() {
		return (pPackage != null) ? pPackage : (pPackage = new PackageElements());
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}

	//Feature:
	//	Reference | DataType;
	public FeatureElements getFeatureAccess() {
		return (pFeature != null) ? pFeature : (pFeature = new FeatureElements());
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}

	//Entity:
	//	{Entity} (annotations+=EntityAnnotation annotations+=EntityAnnotation*)? "entity" name=ID (":" superEntity=[Entity])?
	//	"{" (features+=Feature features+=Feature*)? "}";
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//enum EntityAnnotation:
	//	Cache="@Cache";
	public EntityAnnotationElements getEntityAnnotationAccess() {
		return (unknownRuleEntityAnnotation != null) ? unknownRuleEntityAnnotation : (unknownRuleEntityAnnotation = new EntityAnnotationElements());
	}
	
	public EnumRule getEntityAnnotationRule() {
		return getEntityAnnotationAccess().getRule();
	}

	//enum FetureAnnotation:
	//	Index="@Index" | Id="@Id" | Load="@Load" | Ignore="@Ignore";
	public FetureAnnotationElements getFetureAnnotationAccess() {
		return (unknownRuleFetureAnnotation != null) ? unknownRuleFetureAnnotation : (unknownRuleFetureAnnotation = new FetureAnnotationElements());
	}
	
	public EnumRule getFetureAnnotationRule() {
		return getFetureAnnotationAccess().getRule();
	}

	//Reference:
	//	{Reference} (annotations+=FetureAnnotation annotations+=FetureAnnotation*)? "var" name=ID reference=[Entity]
	//	many?="[]"?;
	public ReferenceElements getReferenceAccess() {
		return (pReference != null) ? pReference : (pReference = new ReferenceElements());
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}

	//DataType:
	//	{DataType} (annotations+=FetureAnnotation annotations+=FetureAnnotation*)? "var" name=ID type=DataTypes many?="[]"?;
	public DataTypeElements getDataTypeAccess() {
		return (pDataType != null) ? pDataType : (pDataType = new DataTypeElements());
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}

	//enum DataTypes:
	//	String="string" | Integer="integer" | Boolean="boolean" | Long="long" | Double="double" | Object="object";
	public DataTypesElements getDataTypesAccess() {
		return (unknownRuleDataTypes != null) ? unknownRuleDataTypes : (unknownRuleDataTypes = new DataTypesElements());
	}
	
	public EnumRule getDataTypesRule() {
		return getDataTypesAccess().getRule();
	}

	//QUALIFIED_NAME:
	//	ID ("." ID)*;
	public QUALIFIED_NAMEElements getQUALIFIED_NAMEAccess() {
		return (pQUALIFIED_NAME != null) ? pQUALIFIED_NAME : (pQUALIFIED_NAME = new QUALIFIED_NAMEElements());
	}
	
	public ParserRule getQUALIFIED_NAMERule() {
		return getQUALIFIED_NAMEAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
