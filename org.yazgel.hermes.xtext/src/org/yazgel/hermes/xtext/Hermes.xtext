// automatically generated by Xtext
grammar org.yazgel.hermes.xtext.Hermes with org.eclipse.xtext.common.Terminals

import "platform:/resource/org.yazgel.hermes/model/hermes.ecore" 

Module returns Module:
	{Module}
	'module'
	name=QUALIFIED_NAME
	(packages+=Package (packages+=Package)*)?
;

Package returns Package:
	{Package}
	'package'
	 name=QUALIFIED_NAME 
	'{'
		(entities+=Entity (entities+=Entity)*)?
	'}';


Feature returns Feature:
	Reference | DataType;

Entity returns Entity:
	{Entity}
	(annotations+= EntityAnnotation (annotations+= EntityAnnotation)*)?
	'entity'
	name = ID (':' superEntity=[Entity|ID])? 
	'{' 
		(features+=Feature (features+=Feature)*)?
	'}';

enum EntityAnnotation returns EntityAnnotation:
	Cache = '@Cache';

enum FetureAnnotation returns FetureAnnotation:
	Index = '@Index' | Id = '@Id' | Load = '@Load' | Ignore = '@Ignore';

Reference returns Reference:
	{Reference}
	(annotations+= FetureAnnotation (annotations+= FetureAnnotation)*)?
	'var'
	name=ID
	reference=[Entity|ID]
	many?=('[]')?
	;

DataType returns DataType:
	{DataType}
	(annotations+= FetureAnnotation (annotations+= FetureAnnotation)*)?
	'var'
	name=ID
	type=DataTypes	
	many?=('[]')?
	;

enum DataTypes returns DataTypes:
	String = 'string' | Integer = 'integer' | Boolean = 'boolean' | Long = 'long' | Double = 'double' | Object = 'object';

QUALIFIED_NAME:
	ID('.'ID)*
;
