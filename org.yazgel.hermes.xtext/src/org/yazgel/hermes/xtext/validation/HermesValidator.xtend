/*
 * generated by Xtext
 */
package org.yazgel.hermes.xtext.validation

import static extension java.lang.Character.*

import org.eclipse.xtext.validation.Check
import org.yazgel.hermes.Entity
import org.yazgel.hermes.HermesPackage
import org.yazgel.hermes.Ref
import org.yazgel.hermes.DataType

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class HermesValidator extends AbstractHermesValidator {

	@Check
	def checkNoCycleInEntityHierarchy(Entity entity) {
		if (entity.superEntity == null)
			return // nothing to check
		val visitedEntities = <Entity>newHashSet()
		visitedEntities.add(entity)
		var current = entity.superEntity
		while (current != null) {
			if (visitedEntities.contains(current)) {
				error("cycle in hierarchy of entity '" + current.name + "'",
					HermesPackage::eINSTANCE.entity_SuperEntity)
				return
			}
			visitedEntities.add(current)
			current = current.superEntity
		}
	}

	@Check
	def checkEntityNameStartsWithCapital(Entity entity) {
		if (entity.name.charAt(0).lowerCase)
			warning("Entity name should start with a capital", HermesPackage::eINSTANCE.namedElement_Name)
	}

	@Check
	def checkReferenceNameStartsWithLowercase(Ref attr) {
		if (attr.name.charAt(0).upperCase)
			warning("Reference name should start with a lowercase", HermesPackage::eINSTANCE.namedElement_Name)
	}

	@Check
	def checkAttributeNameStartsWithLowercase(DataType attr) {
		if (attr.name.charAt(0).upperCase)
			warning("DataType name should start with a lowercase", HermesPackage::eINSTANCE.namedElement_Name)
	}
}
