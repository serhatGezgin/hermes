/*
 * generated by Xtext
 */
package org.yazgel.hermes.xtext.validation

import org.eclipse.xtext.validation.Check
import org.yazgel.hermes.DataType
import org.yazgel.hermes.Entity
import org.yazgel.hermes.HermesPackage
import org.yazgel.hermes.Reference

import static extension java.lang.Character.*

/** 
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class HermesValidator extends AbstractHermesValidator {

	public static val HIERARCHY_CYCLE = "org.yazgel.hermes.HierarchyCycle";
	public static val INVALID_PACKAGE_NAME = "org.yazgel.hermes.InvalidPackageName";
	public static val INVALID_ENTITY_NAME = "org.yazgel.hermes.InvalidEntityName";
	public static val INVALID_REFERENCE_NAME = "org.yazgel.hermes.InvalidReferenceName";
	public static val INVALID_DATATYPE_NAME = "org.yazgel.hermes.InvalidDataTypeName";

	@Check
	def checkPackageNameCharsLowercase(org.yazgel.hermes.Package pack) {
		if (!pack.name.toLowerCase.equals(pack.name)) {
			warning(
				"Package name should not have uppercase letter",
				HermesPackage::eINSTANCE.namedElement_Name,
				INVALID_PACKAGE_NAME,
				pack.name
			)
		}
	}

	@Check
	def checkNoCycleInEntityHierarchy(Entity entity) {
		if (entity.superEntity == null)
			return // nothing to check
		val visitedEntities = <Entity>newHashSet()
		visitedEntities.add(entity)
		var current = entity.superEntity
		while (current != null) {
			if (visitedEntities.contains(current)) {
				error("cycle in hierarchy of entity '" + current.name + "'",
					HermesPackage::eINSTANCE.entity_SuperEntity, HIERARCHY_CYCLE, current.superEntity.name)
				return
			}
			visitedEntities.add(current)
			current = current.superEntity
		}
	}

	@Check
	def checkEntityNameStartsWithCapital(Entity entity) {
		if (entity.name.charAt(0).lowerCase)
			warning("Entity name should start with a capital letter", HermesPackage::eINSTANCE.namedElement_Name,
				INVALID_ENTITY_NAME, entity.name)
	}

	@Check
	def checkReferenceNameStartsWithLowercase(Reference ref) {
		if (ref.name.charAt(0).upperCase)
			warning("Reference name should start with a lowercase", HermesPackage::eINSTANCE.namedElement_Name,
				INVALID_REFERENCE_NAME, ref.name)
	}

	@Check
	def checkAttributeNameStartsWithLowercase(DataType data) {
		if (data.name.charAt(0).upperCase)
			warning("Datatype name should start with a lowercase", HermesPackage::eINSTANCE.namedElement_Name,
				INVALID_DATATYPE_NAME, data.name)
	}
}
